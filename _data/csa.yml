# course illustrations
introduction_tools: &introduction_tools |
    +-----------------+
    | Laptop, OS      |
    | Tool Setup      | 
    +-----------------+
       |
       | VS Code, Anaconda, Jupyter, Java Kernel
       v
    +-----------------+
    | VS Code, Develop|
    | Code Editor     | 
    +-----------------+
       |
       | Code, build, test, debug
       v
    +-----------------+
    | VS Code, Git    |
    | Version Control |       | 
    +-----------------+
       |
       | Commit local versions, track change
       v
    +-----------------+
    | VS Code, Project|
    | GitHub Sync     |
    +-----------------+
       |
       | Push changes to cloud Repository
       v
    +-----------------+
    | GitHub,  Collab |
    | Shared Code     |
    +-----------------+
       |
       | Actions, Jekyll build
       v
    +-----------------+
    | GitHub Pages    |
    | Showcase Project|
    +-----------------+

web_dev_layers: &web_dev_layers |
    +---------------+
    | GitHub Pages  |
    | Design, Layout|
    |   Frontend    |
    +---------------+
          |
          | User presentation, style 
          | Actions
          v
    +--------------+
    |  JavaScript  |
    | Logic/Events |
    +--------------+
          |
          | Functionality, interactivity
          | Sends HTTP requests/responses
          v
    +----------------+
    | AWS EC2 Server |
    |  Java / Spring |
    |    Backend     |
    +----------------+
          |
          | Server-Side Proccessing
          | Analysis Jars and Engines
          | Communicate with Services
          v
    +----------------+
    |  AWS Services  |
    |   Store Data   |
    +----------------+

# CSP course meta data
Unit1:
  title: Tools and Software Development Processes
  description: Students should have experience in blogging, coding with Jupyter Notebooks, and GitHub Pages; understnding of Linux, Python, Markdown, HTML, and JavaScript is expected. Students have previously  established foundation using essential tools and software development processes.  Weeks 0-3 will provide a quick review and students will start their Java coding journey.
  illustration: *introduction_tools
  start: 0
  end: 3
Unit2:
  title: Java Mini-labs
  description: Students have been introduced to Classes and Inheritance in Python and JavaScript.  In this unit students will become more familiar with Java development and classes through Mini-labs.  These labs will introduce AP required aspects of Java, FRQ requirements, and start looking at College Boards 10 Units.
  start: 4
  end: 7
Unit3:
  title:  Individual/Team Projects and N@tM
  description: In this unit students will continue to become familiar with Java development and classes as they transition from Console / Desktop Development and learn Web Development.  Coding will focus on Java Spring backend WebSite and frameworks that suppot receiving, responding to requests. 
  illustration: *web_dev_layers
  start: 8
  end: 12
Unit4:
  title: College Board Teaching and Study 
  description: This period will complete formal teaching and grading on the basics of the 10 units.  Also, there will be a tech talk and homework on each FRQ type customized for Team PBL idea.
  start: 13
  end: 16
Unit5:
  title: Passion Projects
  description: Objective of these weeks is to explore and create ideas and concepts for a Team two trimester project.  Adding frontend and creativity while using APIs/Databases.  This should be a project of personal and team interest.  Team projects that are most liked by Teachers and Students will be continued in Trimester 3.
  start: 17
  end: 20
Unit6:
  title: Creative Development and N@tM
  description: This will be most creative portion of year for CSA students.  Each person within "Student Teams" will have their own specialty within their student project that shows Full Stack competency, requiring Java as backend.  Intentions for this period is to have a free and creative period, driven by your Issues and Scrum Board.  Student should be able to talk about design, do fe/be coding, addd database features and perform weekly live reviews.  
  start: 21
  end: 24
Unit7: 
  title: Data Structures
  description: A focus Data Structures that relate to the AP exam.  A key requirement is to make your own Algo Rythmic sorting video.   The theme is produce work that can be used to help you pass the AP Exam and improve your Passion Project.  Each student must cover key concepts from one of the Four AP FRQ types, contain a key Data Structure, and utilize sorting. These requirements are fairly generic and could complement any project.
  start: 25
  end: 29
Unit8:
  title: AP Weeks
  description: Student will lead several study sessions (20 minute test, follow by review) the week before the exam.  In any break in study, students will transition activities to a final project.
  start: 30
  end: 32
Unit9:
  title: Final Project and N@tM
  description: Wrap up your preferred project.  There will be an opportunity to contribute and be published to the NightHawk Coding Society library.  If your project is selected, then you will receive a high 'A' on final.
  start: 33
  end: 36
